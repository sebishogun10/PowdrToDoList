services:
  db:
    image: postgres:15-alpine
    container_name: todo_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    container_name: todo_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - JWT_SECRET=YourSuperSecretKeyForJwtTokenThatShouldBeVeryLongAndSecure
    ports:
      - "8080:8080"
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: todo_frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080/api
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - todo-network

volumes:
  postgres-data:
    name: todo-postgres-data

networks:
  todo-network:
    name: todo-network
    driver: bridge
